# Generated by Django 3.2.16 on 2025-04-02 17:13

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cashier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Время обновления')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('name', models.CharField(max_length=150, verbose_name='Имя кассира')),
            ],
            options={
                'verbose_name': 'Кассир',
                'verbose_name_plural': 'Кассиры',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CashRegister',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Время обновления')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('number', models.PositiveIntegerField(unique=True, verbose_name='Номер кассы')),
            ],
            options={
                'verbose_name': 'Касса',
                'verbose_name_plural': 'Кассы',
                'ordering': ['number'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Время обновления')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название категории')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DiscountCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Время обновления')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('card_number', models.CharField(max_length=20, unique=True, verbose_name='Номер карты')),
                ('discount_percent', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)], verbose_name='Процент скидки (%)')),
            ],
            options={
                'verbose_name': 'Дисконтная карта',
                'verbose_name_plural': 'Дисконтные карты',
                'ordering': ['card_number'],
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Название метода')),
                ('code', models.CharField(choices=[('cash', 'Наличные'), ('card', 'Безналичный расчет')], default='card', max_length=10, unique=True)),
            ],
            options={
                'verbose_name': 'Метод оплаты',
                'verbose_name_plural': 'Методы оплаты',
            },
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Время обновления')),
                ('purchase_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Время покупки')),
                ('total_amount_before_discount', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Сумма до скидки')),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Сумма скидки')),
                ('final_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Итоговая сумма')),
                ('amount_paid_cash', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Оплачено наличными')),
                ('amount_paid_card', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Оплачено картой')),
                ('cash_register', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='purchases', to='supermarket_app.cashregister', verbose_name='Касса')),
                ('cashier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='purchases', to='supermarket_app.cashier', verbose_name='Кассир')),
                ('discount_card', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='purchases', to='supermarket_app.discountcard', verbose_name='Дисконтная карта')),
                ('payment_methods_used', models.ManyToManyField(blank=True, related_name='purchases_where_used', to='supermarket_app.PaymentMethod', verbose_name='Использованные методы оплаты')),
            ],
            options={
                'verbose_name': 'Покупка (Чек)',
                'verbose_name_plural': 'Покупки (Чеки)',
                'ordering': ['-purchase_time'],
            },
        ),
        migrations.CreateModel(
            name='TransportCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Время обновления')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Название компании')),
                ('contact_info', models.TextField(blank=True, verbose_name='Контактная информация')),
            ],
            options={
                'verbose_name': 'Транспортная компания',
                'verbose_name_plural': 'Транспортные компании',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Время обновления')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('name', models.CharField(max_length=200, verbose_name='Название товара')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='products', to='supermarket_app.category', verbose_name='Категория')),
                ('transport_companies', models.ManyToManyField(blank=True, related_name='products', to='supermarket_app.TransportCompany', verbose_name='Транспортные компании')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Время обновления')),
                ('value', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Цена')),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата начала действия цены')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prices', to='supermarket_app.product', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Цена',
                'verbose_name_plural': 'Цены (История)',
                'ordering': ['-start_date'],
                'get_latest_by': 'start_date',
            },
        ),
        migrations.AddField(
            model_name='cashregister',
            name='supported_payment_methods',
            field=models.ManyToManyField(related_name='cash_registers', to='supermarket_app.PaymentMethod', verbose_name='Поддерживаемые методы оплаты'),
        ),
        migrations.CreateModel(
            name='PurchaseItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1, verbose_name='Количество')),
                ('price_at_purchase', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена на момент покупки')),
                ('line_total', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Сумма по позиции')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='purchase_items', to='supermarket_app.product', verbose_name='Товар')),
                ('purchase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='supermarket_app.purchase', verbose_name='Покупка (Чек)')),
            ],
            options={
                'verbose_name': 'Позиция в чеке',
                'verbose_name_plural': 'Позиции в чеках',
                'unique_together': {('purchase', 'product')},
            },
        ),
    ]
